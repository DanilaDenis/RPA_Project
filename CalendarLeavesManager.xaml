<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1783.2,1000" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:e="clr-namespace:ExtractCalendar;assembly=ExtractCalendar" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Calendar</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>RpaProj.Core</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="803.2,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="title" />
      <Variable x:TypeArguments="x:String" Name="description" />
      <Variable x:TypeArguments="s:DateTime" Name="startDate" />
      <Variable x:TypeArguments="s:DateTime" Name="endDate" />
      <Variable x:TypeArguments="x:String" Name="emailGroup" />
      <Variable x:TypeArguments="x:String" Name="emailEmployee" />
      <Variable x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))" Name="absences" />
      <Variable x:TypeArguments="x:String" Default="Acceptata" Name="statusRequest" />
      <Variable x:TypeArguments="s:DateTime" Name="statusDate">
        <Variable.Default>
          <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">startDate</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="rezultat" />
      <Variable x:TypeArguments="x:String" Name="variable2" />
      <Variable x:TypeArguments="x:String" Name="variable1" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">20,2.6666666666666643</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">80,40.266666666666666 110,40.266666666666666 110,40 180,40</av:PointCollection>
        <x:Double x:Key="Width">769.2000000000003</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">180,13.600000000000001</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">380,40 470,40</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExtractFormData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ExtractFormData.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="x:String" x:Key="description">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">description</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="title">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">title</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="s:DateTime" x:Key="startDate">
            <CSharpReference x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">startDate</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="s:DateTime" x:Key="endDate">
            <CSharpReference x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">endDate</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="emailEmployee">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">emailEmployee</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="emailGroup">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">emailGroup</CSharpReference>
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">470,13.600000000000001</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">570,66.4 570,149.6</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <e:ExtractCalendar sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ExtractCalendar_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <e:ExtractCalendar.absences>
              <OutArgument x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))">
                <CSharpReference x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">absences</CSharpReference>
              </OutArgument>
            </e:ExtractCalendar.absences>
            <e:ExtractCalendar.appId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">GlobalVariablesNamespace.GlobalVariables.strAppId</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.appId>
            <e:ExtractCalendar.emailEmployee>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>emailEmployee</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.emailEmployee>
            <e:ExtractCalendar.emailGroup>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>emailGroup</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.emailGroup>
            <e:ExtractCalendar.endDate>
              <InArgument x:TypeArguments="s:DateTime">
                <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">endDate</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.endDate>
            <e:ExtractCalendar.nrGroupMembers>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">GlobalVariablesNamespace.GlobalVariables.nrGroupMembers</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.nrGroupMembers>
            <e:ExtractCalendar.startDate>
              <InArgument x:TypeArguments="s:DateTime">
                <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">startDate</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.startDate>
            <e:ExtractCalendar.tentantId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">GlobalVariablesNamespace.GlobalVariables.strTenant</CSharpValue>
              </InArgument>
            </e:ExtractCalendar.tentantId>
          </e:ExtractCalendar>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">470,149.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,160.8</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">470,230 250,230</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch sap2010:Annotation.AnnotationText="If exception inside code is thrown, we throw a business exception containing the message, that will be displayed by the Main sequence" DisplayName="Check if available" sap:VirtualizedContainerService.HintSize="200,160.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Assuming absences is a Dictionary&lt;DateTime, List&lt;Microsoft.Graph.Event&gt;&gt;&#xA;rezultat += &quot;Rezultate:&quot; + &quot;\n&quot;;&#xA;TimeSpan diferenta = endDate.Subtract(startDate);&#xA;&#xA;for (int i = 0; i &lt;= diferenta.Days; i++)&#xA;{&#xA;    DateTime currentDate = startDate.AddDays(i);&#xA;    if (absences.ContainsKey(currentDate))&#xA;    {&#xA;        HashSet&lt;string&gt; uniqueUsers = new HashSet&lt;string&gt;();&#xA;        foreach (var eventItem in absences[currentDate])&#xA;        {&#xA;            string userId = eventItem.Organizer.EmailAddress.Address;&#xA;            uniqueUsers.Add(userId);&#xA;        }&#xA;&#xA;        rezultat += $&quot;Data {currentDate} cu {uniqueUsers.Count} absente de la {string.Join(&quot;, &quot;, uniqueUsers)}\n&quot;;&#xA;&#xA;        if (uniqueUsers.Count &gt;= nrGroupMembers - 1)&#xA;        {&#xA;            statusRequest = &quot;refuzata&quot;;&#xA;            statusDate = currentDate;&#xA;&#x9;&#x9;&#x9;throw new BusinessRuleException();&#xA;        }&#xA;    }&#xA;}&#xA;" DisplayName="Code: Check if Absence is valid" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="startDate">
                        <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">startDate</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="endDate">
                        <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">endDate</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))" x:Key="absences">
                        <CSharpValue x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">absences</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="nrGroupMembers">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">GlobalVariablesNamespace.GlobalVariables.nrGroupMembers</CSharpValue>
                      </InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="statusRequest">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">statusRequest</CSharpReference>
                      </InOutArgument>
                      <InOutArgument x:TypeArguments="s:DateTime" x:Key="statusDate">
                        <CSharpReference x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">statusDate</CSharpReference>
                      </InOutArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="rezultat">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">rezultat</CSharpReference>
                      </InOutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="449.6,202.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw sap:VirtualizedContainerService.HintSize="387.2,90.4" sap2010:WorkflowViewState.IdRef="Throw_1">
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58" xml:space="preserve">new BusinessRuleException("Dear employee,"+Environment.NewLine+
"Your out of office request was denied, beacuse there would be no one available on "+
statusDate+Environment.NewLine+
"Please check out yoru calendar again and make sure there is someone working in those days."+Environment.NewLine+
"Thank you and hava a nice day,"+Environment.NewLine+
"The administrative team"+Environment.NewLine+
rezultat+Environment.NewLine)</CSharpValue>
                          </InArgument>
                        </Throw>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID0">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">50,203.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">150,256.4 150,343.6</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteExcel.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="WriteExcel.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="title">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">title</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="description">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">description</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="emailEmployee">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">emailEmployee</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="startDate">
                        <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">startDate</CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="endDate">
                        <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">endDate</CSharpValue>
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">50,343.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">250,370 470,370</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AddToCalendar.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="AddToCalendar.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="groupEmail">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">emailGroup</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="employeeEmail">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">emailEmployee</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="s:DateTime" x:Key="startDate">
                            <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">startDate</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="s:DateTime" x:Key="endDate">
                            <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">endDate</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="title">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">title</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="description">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">description</CSharpValue>
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">470,343.6</av:Point>
                              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendResponse.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="SendResponse.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="emailEmployee">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">emailEmployee</CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="title">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">title</CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="s:DateTime" x:Key="startDate">
                                <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">startDate</CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="s:DateTime" x:Key="endDate">
                                <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">endDate</CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="description">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">description</CSharpValue>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="groupEmail">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">emailGroup</CSharpValue>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">180,113.6</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExtractCalendar.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ExtractCalendar.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="emailEmployee">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">emailEmployee</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="emailGroup">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">emailGroup</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="s:DateTime" x:Key="startDate">
            <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">startDate</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="s:DateTime" x:Key="endDate">
            <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">endDate</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="nrGroupMembers">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">GlobalVariablesNamespace.GlobalVariables.nrGroupMembers</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))" x:Key="absences">
            <CSharpReference x:TypeArguments="scg:Dictionary(s:DateTime, scg:List(mg:Event))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">absences</CSharpReference>
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
  </Flowchart>
</Activity>